{"level":"info","message":"Server running on port 3000","timestamp":"2025-02-17T21:07:14.256Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-02-17T21:11:16.539Z"}
{"code":"28P01","file":"auth.c","length":104,"level":"error","line":"324","message":"Error connecting to database: password authentication failed for user \"postgres\"","name":"error","routine":"auth_failed","severity":"FATAL","stack":"error: password authentication failed for user \"postgres\"\n    at Parser.parseErrorMessage (D:\\Repos\\TradeApp\\backend\\node_modules\\pg-protocol\\src\\parser.ts:368:69)\n    at Parser.handlePacket (D:\\Repos\\TradeApp\\backend\\node_modules\\pg-protocol\\src\\parser.ts:187:21)\n    at Parser.parse (D:\\Repos\\TradeApp\\backend\\node_modules\\pg-protocol\\src\\parser.ts:102:30)\n    at Socket.<anonymous> (D:\\Repos\\TradeApp\\backend\\node_modules\\pg-protocol\\src\\index.ts:7:48)\n    at Socket.emit (node:events:519:28)\n    at addChunk (node:internal/streams/readable:559:12)\n    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n    at Socket.Readable.push (node:internal/streams/readable:390:5)\n    at TCP.onStreamRead (node:internal/stream_base_commons:191:23)","timestamp":"2025-02-17T21:15:34.341Z"}
{"level":"info","message":"Database connection established","timestamp":"2025-02-17T22:04:10.227Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-02-17T22:04:10.231Z"}
{"level":"info","message":"Database connection established","timestamp":"2025-02-17T22:05:52.652Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-02-17T22:05:52.656Z"}
{"level":"info","message":"Database connection established","timestamp":"2025-02-17T22:08:52.084Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-02-17T22:08:52.088Z"}
{"level":"info","message":"Available endpoints:","timestamp":"2025-02-17T22:08:52.088Z"}
{"level":"info","message":"- POST /api/auth/register","timestamp":"2025-02-17T22:08:52.089Z"}
{"level":"info","message":"- POST /api/auth/login","timestamp":"2025-02-17T22:08:52.089Z"}
{"level":"info","message":"- GET /api/health","timestamp":"2025-02-17T22:08:52.089Z"}
{"level":"info","message":"Database connection established","timestamp":"2025-02-17T22:10:57.565Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-02-17T22:10:57.569Z"}
{"level":"info","message":"Available endpoints:","timestamp":"2025-02-17T22:10:57.570Z"}
{"level":"info","message":"- POST /api/auth/register","timestamp":"2025-02-17T22:10:57.570Z"}
{"level":"info","message":"- POST /api/auth/login","timestamp":"2025-02-17T22:10:57.570Z"}
{"level":"info","message":"- GET /api/health","timestamp":"2025-02-17T22:10:57.571Z"}
{"level":"info","message":"Database connection established","timestamp":"2025-02-17T22:13:54.972Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2025-02-17T22:13:54.976Z"}
{"level":"info","message":"Available endpoints:","timestamp":"2025-02-17T22:13:54.976Z"}
{"level":"info","message":"- POST /api/auth/register","timestamp":"2025-02-17T22:13:54.977Z"}
{"level":"info","message":"- POST /api/auth/login","timestamp":"2025-02-17T22:13:54.977Z"}
{"level":"info","message":"- GET /api/health","timestamp":"2025-02-17T22:13:54.977Z"}
{"level":"error","message":"Error in login service: Invalid password","stack":"Error: Invalid password\n    at Function.login (D:\\Repos\\TradeApp\\backend\\src\\services\\authService.ts:97:15)\n    at D:\\Repos\\TradeApp\\backend\\src\\routes\\auth.ts:38:20","timestamp":"2025-02-17T22:14:32.864Z"}
{"level":"error","message":"Login error: Invalid password","stack":"Error: Invalid password\n    at Function.login (D:\\Repos\\TradeApp\\backend\\src\\services\\authService.ts:97:15)\n    at D:\\Repos\\TradeApp\\backend\\src\\routes\\auth.ts:38:20","timestamp":"2025-02-17T22:14:32.865Z"}
